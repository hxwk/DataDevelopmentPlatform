<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.dfssi.dataplatform.analysis.task.mapper.MonitorWorkflowDao">

    <resultMap id="resultMap" type="com.dfssi.dataplatform.analysis.task.entity.MonitorWorkflowEntity">
        <id property="id" column="id"/>
        <result property="modelId" column="model_id"/>
        <result property="oozieTaskId" column="oozie_task_id"/>
        <result property="name" column="name"/>
        <result property="status" column="status"/>
        <result property="startTime" column="start_time"/>
        <result property="endTime" column="end_time"/>
        <result property="createTime" column="create_time"/>
        <result property="lastModifiedTime" column="last_modified_time"/>
    </resultMap>

    <insert id="insert">
        INSERT INTO monitor_workflow_job(model_id, oozie_task_id, name, status, start_time, end_time, create_time, last_modified_time)
        VALUES (#{modelId}, #{oozieTaskId}, #{name}, #{status}, #{startTime}, #{endTime}, #{createTime}, #{lastModifiedTime})
    </insert>

    <select id="getByModelId" resultMap="resultMap" parameterType="com.dfssi.dataplatform.analysis.task.entity.MonitorWorkflowEntity">
        SELECT *
        FROM monitor_workflow_job
        WHERE model_id = #{modelId}
    </select>

    <select id="getOozieIdByModelId" resultType="java.lang.String">
        SELECT oozie_task_id
        FROM monitor_workflow_job
        WHERE model_id = #{modelId}
    </select>

    <update id="updateStatusByModelId">
        update monitor_workflow_job
        set
        status = #{status},
        start_time = #{startTime},
        end_time = #{endTime},
        create_time = #{createTime},
        last_modified_time = #{lastModifiedTime}
        WHERE model_id = #{modelId}
    </update>

    <update id="updateStatusByOozieTaskId">
        update monitor_workflow_job
        set
        status = #{status},
        start_time = #{startTime},
        end_time = #{endTime},
        create_time = #{createTime},
        last_modified_time = #{lastModifiedTime}
        WHERE oozie_task_id = #{oozieTaskId}
    </update>

    <update id="updateStatusWhenKillByModelId">
        update monitor_workflow_job
        set
        status = 'KILLED'
        where model_id = #{modelId}
        order by start_time desc limit 1
    </update>

    <update id="updateWhenStart">
        update monitor_workflow_job
        set
        oozie_task_id = #{oozieTaskId},
        status = #{status},
        start_time = #{startTime},
        end_time = #{endTime},
        create_time = #{createTime},
        last_modified_time = #{lastModifiedTime}
        WHERE model_id = #{modelId}
    </update>

    <delete id="deleteByModelId">
		DELETE FROM monitor_workflow_job WHERE model_id = #{modelId}
	</delete>

    <select id="listRunningTasksByModelId" resultMap="resultMap" parameterType="com.dfssi.dataplatform.analysis.task.entity.MonitorWorkflowEntity">
        SELECT
        *
        FROM monitor_workflow_job
        WHERE status != 'SUCCEEDED'
        AND status != 'FAILED'
        AND status != 'KILLED'
        AND model_id = #{modelId}
    </select>

</mapper>