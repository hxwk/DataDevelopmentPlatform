package com.dfssi.dataplatform.analysis.service.resource;import net.sf.jasperreports.chartthemes.spring.ChartThemesConstants;import net.sf.jasperreports.engine.JRChart;import net.sf.jasperreports.engine.JRChartCustomizer;import org.jfree.chart.JFreeChart;import org.jfree.chart.axis.CategoryAxis;import org.jfree.chart.axis.ValueAxis;import org.jfree.chart.plot.CategoryPlot;import org.jfree.chart.plot.PiePlot;import org.jfree.chart.plot.XYPlot;import org.jfree.chart.renderer.category.BarRenderer;import org.jfree.chart.renderer.xy.XYShapeRenderer;import org.jfree.chart.title.LegendTitle;import org.jfree.chart.title.TextTitle;import org.jfree.data.general.PieDataset;import java.awt.*;/** * @Description 自定义报表可视化（主要包括字体和样式） * @Author zhangcheng * @Date 2018/9/18 15:25 **/public class ChartCustomizer implements JRChartCustomizer {    /**     * 定义标签字体     */    private final static Font LABEL_FONT = new Font("宋体", Font.PLAIN, 12);    /**     * 定义标题字体     */    private final static Font TITLE_FONT = new Font("宋体", Font.BOLD, 16);    /**     * 自定义样式     *     * @param chart       设计的报表对象     * @param jasperChart     */    @Override    public void customize(JFreeChart chart, JRChart jasperChart) {        //        /*chart.setRenderingHints(new RenderingHints(RenderingHints.KEY_ANTIALIASING,                RenderingHints.VALUE_ANTIALIAS_ON));*/        TextTitle title = chart.getTitle();        if (title != null) {            title.setExpandToFitSpace(true);            title.setFont(TITLE_FONT);        }        //chart.setBorderVisible(true);        //设置字体边界是否模糊,这个属性很重要        chart.setAntiAlias(true);        chart.setTextAntiAlias(true);        //设置背景图片透明度        //chart.setBackgroundImageAlpha(0.0f);        //设置背景颜色        chart.setBackgroundPaint(Color.white);        //设置边界线条颜色        //chart.setBorderPaint(Color.BLACK);        //设置边界线条是否可见        //chart.setBorderVisible(true);        //边界线条笔触        //chart.setBorderStroke(new BasicStroke(3.0f));        //图示项        LegendTitle legend = chart.getLegend();        //图示项字体        legend.setItemFont(LABEL_FONT);        //图示项字体颜色        legend.setItemPaint(Color.BLACK);        legend.setBackgroundPaint(Color.white);        legend.setBorder(0, 0, 0, 0);        if (chart.getPlot() instanceof CategoryPlot) {            CategoryPlot plot = (CategoryPlot) chart.getPlot();            if (plot != null) {                //plot.setWeight(800);                CategoryAxis domainAxis = plot.getDomainAxis();                domainAxis.setLabelFont(LABEL_FONT);                //domainAxis.setLabel("$P{xLabel}");                ValueAxis rangeAxis = plot.getRangeAxis();                rangeAxis.setLabelFont(LABEL_FONT);                //rangeAxis.setLabel("$P{yLabel}");                plot.setBackgroundPaint(Color.white);                if (plot.getRenderer() instanceof BarRenderer) {                    BarRenderer renderer = (BarRenderer) plot.getRenderer();                    for (int i = 0; i < plot.getDataset().getRowKeys().size(); i++) {                        /*renderer.setSeriesOutlinePaint(i, Color.BLACK);                        renderer.setSeriesOutlineStroke(i, new BasicStroke(3.0f));                        renderer.setMaximumBarWidth(0.015);     //宽度可调                        renderer.setItemMargin(0.0);*/                        //renderer.setSeriesPaint(i, Color.blue);                        //renderer.setSeriesPaint(i, Color.orange);                        //renderer.setMaximumBarWidth(50);                        //renderer.setMinimumBarLength(4);                        renderer.setDrawBarOutline(false);                        renderer.setItemMargin(0.01);                        renderer.setShadowVisible(false);                        renderer.setShadowXOffset(0);                        renderer.setShadowYOffset(0);                        //renderer.setSeriesOutlinePaint(i, Color.BLACK);                        renderer.setAutoPopulateSeriesShape(true);                        renderer.setLegendTextFont(i, new Font("宋体", Font.PLAIN, 12));                    }                }            }        } else if (chart.getPlot() instanceof XYPlot) {            XYPlot plot = (XYPlot) chart.getPlot();            if (plot != null) {                ValueAxis domainAxis = plot.getDomainAxis();                domainAxis.setLabelFont(LABEL_FONT);                //domainAxis.setLabel("身高（cm）");                ValueAxis rangeAxis = plot.getRangeAxis();                rangeAxis.setLabelFont(LABEL_FONT);                //rangeAxis.setLabel("体重（kg）");                if (plot.getRenderer() instanceof XYShapeRenderer) {                }            }        } else if (chart.getPlot() instanceof PiePlot) {            PiePlot plot = (PiePlot) chart.getPlot();            if (plot != null) {                plot.setLabelBackgroundPaint(ChartThemesConstants.TRANSPARENT_PAINT);                plot.setLabelShadowPaint(ChartThemesConstants.TRANSPARENT_PAINT);                plot.setLabelOutlinePaint(ChartThemesConstants.TRANSPARENT_PAINT);                plot.setCircular(true);                PieDataset pieDataset = plot.getDataset();                if (pieDataset != null) {                    for (int i = 0; i < pieDataset.getItemCount(); i++) {                        plot.setSectionOutlinePaint(pieDataset.getKey(i), ChartThemesConstants.TRANSPARENT_PAINT);                        //makes pie colors darker                        //plot.setSectionPaint(pieDataset.getKey(i), ChartThemesConstants.EYE_CANDY_SIXTIES_COLORS.get(i));                    }                }            }        }    }}