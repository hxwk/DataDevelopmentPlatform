// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MultiColumnMatchFilter.proto

package com.dfssi.hbase.protobuf.generated;

public final class MultiColumnMatchFilterProto {
  private MultiColumnMatchFilterProto() {}
  public static void registerAllExtensions(
          com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface MultiColumnMatchFilterOrBuilder extends
          // @@protoc_insertion_point(interface_extends:com.bh.d406.bigdata.hbase.protobuf.MultiColumnMatchFilter)
          com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required bytes columnFamily = 1;</code>
     *
     * <pre>
     *版本过滤的列族
     * </pre>
     */
    boolean hasColumnFamily();
    /**
     * <code>required bytes columnFamily = 1;</code>
     *
     * <pre>
     *版本过滤的列族
     * </pre>
     */
    com.google.protobuf.ByteString getColumnFamily();

    /**
     * <code>repeated bytes mustMatchColumns = 2;</code>
     *
     * <pre>
     *必须包含的列名
     * </pre>
     */
    java.util.List<com.google.protobuf.ByteString> getMustMatchColumnsList();
    /**
     * <code>repeated bytes mustMatchColumns = 2;</code>
     *
     * <pre>
     *必须包含的列名
     * </pre>
     */
    int getMustMatchColumnsCount();
    /**
     * <code>repeated bytes mustMatchColumns = 2;</code>
     *
     * <pre>
     *必须包含的列名
     * </pre>
     */
    com.google.protobuf.ByteString getMustMatchColumns(int index);

    /**
     * <code>repeated bytes mayMatchColumns = 3;</code>
     *
     * <pre>
     *可能包含列名
     * </pre>
     */
    java.util.List<com.google.protobuf.ByteString> getMayMatchColumnsList();
    /**
     * <code>repeated bytes mayMatchColumns = 3;</code>
     *
     * <pre>
     *可能包含列名
     * </pre>
     */
    int getMayMatchColumnsCount();
    /**
     * <code>repeated bytes mayMatchColumns = 3;</code>
     *
     * <pre>
     *可能包含列名
     * </pre>
     */
    com.google.protobuf.ByteString getMayMatchColumns(int index);

    /**
     * <code>optional sint32 minMatch = 4 [default = -1];</code>
     *
     * <pre>
     *至少包含多少个列
     * </pre>
     */
    boolean hasMinMatch();
    /**
     * <code>optional sint32 minMatch = 4 [default = -1];</code>
     *
     * <pre>
     *至少包含多少个列
     * </pre>
     */
    int getMinMatch();
  }
  /**
   * Protobuf type {@code com.bh.d406.bigdata.hbase.protobuf.MultiColumnMatchFilter}
   */
  public static final class MultiColumnMatchFilter extends
          com.google.protobuf.GeneratedMessage implements
          // @@protoc_insertion_point(message_implements:com.bh.d406.bigdata.hbase.protobuf.MultiColumnMatchFilter)
          MultiColumnMatchFilterOrBuilder {
    // Use MultiColumnMatchFilter.newBuilder() to construct.
    private MultiColumnMatchFilter(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private MultiColumnMatchFilter(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final MultiColumnMatchFilter defaultInstance;
    public static MultiColumnMatchFilter getDefaultInstance() {
      return defaultInstance;
    }

    public MultiColumnMatchFilter getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private MultiColumnMatchFilter(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
              com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                      extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              columnFamily_ = input.readBytes();
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                mustMatchColumns_ = new java.util.ArrayList<com.google.protobuf.ByteString>();
                mutable_bitField0_ |= 0x00000002;
              }
              mustMatchColumns_.add(input.readBytes());
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                mayMatchColumns_ = new java.util.ArrayList<com.google.protobuf.ByteString>();
                mutable_bitField0_ |= 0x00000004;
              }
              mayMatchColumns_.add(input.readBytes());
              break;
            }
            case 32: {
              bitField0_ |= 0x00000002;
              minMatch_ = input.readSInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
                e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          mustMatchColumns_ = java.util.Collections.unmodifiableList(mustMatchColumns_);
        }
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          mayMatchColumns_ = java.util.Collections.unmodifiableList(mayMatchColumns_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
    getDescriptor() {
      return MultiColumnMatchFilterProto.internal_static_com_bh_d406_bigdata_hbase_protobuf_MultiColumnMatchFilter_descriptor;
    }

    protected FieldAccessorTable
    internalGetFieldAccessorTable() {
      return MultiColumnMatchFilterProto.internal_static_com_bh_d406_bigdata_hbase_protobuf_MultiColumnMatchFilter_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                      MultiColumnMatchFilterProto.MultiColumnMatchFilter.class, MultiColumnMatchFilterProto.MultiColumnMatchFilter.Builder.class);
    }

    public static com.google.protobuf.Parser<MultiColumnMatchFilter> PARSER =
            new com.google.protobuf.AbstractParser<MultiColumnMatchFilter>() {
              public MultiColumnMatchFilter parsePartialFrom(
                      com.google.protobuf.CodedInputStream input,
                      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                      throws com.google.protobuf.InvalidProtocolBufferException {
                return new MultiColumnMatchFilter(input, extensionRegistry);
              }
            };

    @Override
    public com.google.protobuf.Parser<MultiColumnMatchFilter> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int COLUMNFAMILY_FIELD_NUMBER = 1;
    private com.google.protobuf.ByteString columnFamily_;
    /**
     * <code>required bytes columnFamily = 1;</code>
     *
     * <pre>
     *版本过滤的列族
     * </pre>
     */
    public boolean hasColumnFamily() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required bytes columnFamily = 1;</code>
     *
     * <pre>
     *版本过滤的列族
     * </pre>
     */
    public com.google.protobuf.ByteString getColumnFamily() {
      return columnFamily_;
    }

    public static final int MUSTMATCHCOLUMNS_FIELD_NUMBER = 2;
    private java.util.List<com.google.protobuf.ByteString> mustMatchColumns_;
    /**
     * <code>repeated bytes mustMatchColumns = 2;</code>
     *
     * <pre>
     *必须包含的列名
     * </pre>
     */
    public java.util.List<com.google.protobuf.ByteString>
    getMustMatchColumnsList() {
      return mustMatchColumns_;
    }
    /**
     * <code>repeated bytes mustMatchColumns = 2;</code>
     *
     * <pre>
     *必须包含的列名
     * </pre>
     */
    public int getMustMatchColumnsCount() {
      return mustMatchColumns_.size();
    }
    /**
     * <code>repeated bytes mustMatchColumns = 2;</code>
     *
     * <pre>
     *必须包含的列名
     * </pre>
     */
    public com.google.protobuf.ByteString getMustMatchColumns(int index) {
      return mustMatchColumns_.get(index);
    }

    public static final int MAYMATCHCOLUMNS_FIELD_NUMBER = 3;
    private java.util.List<com.google.protobuf.ByteString> mayMatchColumns_;
    /**
     * <code>repeated bytes mayMatchColumns = 3;</code>
     *
     * <pre>
     *可能包含列名
     * </pre>
     */
    public java.util.List<com.google.protobuf.ByteString>
    getMayMatchColumnsList() {
      return mayMatchColumns_;
    }
    /**
     * <code>repeated bytes mayMatchColumns = 3;</code>
     *
     * <pre>
     *可能包含列名
     * </pre>
     */
    public int getMayMatchColumnsCount() {
      return mayMatchColumns_.size();
    }
    /**
     * <code>repeated bytes mayMatchColumns = 3;</code>
     *
     * <pre>
     *可能包含列名
     * </pre>
     */
    public com.google.protobuf.ByteString getMayMatchColumns(int index) {
      return mayMatchColumns_.get(index);
    }

    public static final int MINMATCH_FIELD_NUMBER = 4;
    private int minMatch_;
    /**
     * <code>optional sint32 minMatch = 4 [default = -1];</code>
     *
     * <pre>
     *至少包含多少个列
     * </pre>
     */
    public boolean hasMinMatch() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional sint32 minMatch = 4 [default = -1];</code>
     *
     * <pre>
     *至少包含多少个列
     * </pre>
     */
    public int getMinMatch() {
      return minMatch_;
    }

    private void initFields() {
      columnFamily_ = com.google.protobuf.ByteString.EMPTY;
      mustMatchColumns_ = java.util.Collections.emptyList();
      mayMatchColumns_ = java.util.Collections.emptyList();
      minMatch_ = -1;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasColumnFamily()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
            throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, columnFamily_);
      }
      for (int i = 0; i < mustMatchColumns_.size(); i++) {
        output.writeBytes(2, mustMatchColumns_.get(i));
      }
      for (int i = 0; i < mayMatchColumns_.size(); i++) {
        output.writeBytes(3, mayMatchColumns_.get(i));
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeSInt32(4, minMatch_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
                .computeBytesSize(1, columnFamily_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < mustMatchColumns_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
                  .computeBytesSizeNoTag(mustMatchColumns_.get(i));
        }
        size += dataSize;
        size += 1 * getMustMatchColumnsList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < mayMatchColumns_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
                  .computeBytesSizeNoTag(mayMatchColumns_.get(i));
        }
        size += dataSize;
        size += 1 * getMayMatchColumnsList().size();
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
                .computeSInt32Size(4, minMatch_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @Override
    protected Object writeReplace()
            throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static MultiColumnMatchFilterProto.MultiColumnMatchFilter parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MultiColumnMatchFilterProto.MultiColumnMatchFilter parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MultiColumnMatchFilterProto.MultiColumnMatchFilter parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MultiColumnMatchFilterProto.MultiColumnMatchFilter parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MultiColumnMatchFilterProto.MultiColumnMatchFilter parseFrom(java.io.InputStream input)
            throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static MultiColumnMatchFilterProto.MultiColumnMatchFilter parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static MultiColumnMatchFilterProto.MultiColumnMatchFilter parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static MultiColumnMatchFilterProto.MultiColumnMatchFilter parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static MultiColumnMatchFilterProto.MultiColumnMatchFilter parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static MultiColumnMatchFilterProto.MultiColumnMatchFilter parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(MultiColumnMatchFilterProto.MultiColumnMatchFilter prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @Override
    protected Builder newBuilderForType(
            BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.bh.d406.bigdata.hbase.protobuf.MultiColumnMatchFilter}
     */
    public static final class Builder extends
            com.google.protobuf.GeneratedMessage.Builder<Builder> implements
            // @@protoc_insertion_point(builder_implements:com.bh.d406.bigdata.hbase.protobuf.MultiColumnMatchFilter)
            MultiColumnMatchFilterProto.MultiColumnMatchFilterOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
        return MultiColumnMatchFilterProto.internal_static_com_bh_d406_bigdata_hbase_protobuf_MultiColumnMatchFilter_descriptor;
      }

      protected FieldAccessorTable
      internalGetFieldAccessorTable() {
        return MultiColumnMatchFilterProto.internal_static_com_bh_d406_bigdata_hbase_protobuf_MultiColumnMatchFilter_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                        MultiColumnMatchFilterProto.MultiColumnMatchFilter.class, MultiColumnMatchFilterProto.MultiColumnMatchFilter.Builder.class);
      }

      // Construct using com.bh.d406.bigdata.hbase.protobuf.generated.MultiColumnMatchFilterProto.MultiColumnMatchFilter.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
              BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        columnFamily_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        mustMatchColumns_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        mayMatchColumns_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        minMatch_ = -1;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
      getDescriptorForType() {
        return MultiColumnMatchFilterProto.internal_static_com_bh_d406_bigdata_hbase_protobuf_MultiColumnMatchFilter_descriptor;
      }

      public MultiColumnMatchFilterProto.MultiColumnMatchFilter getDefaultInstanceForType() {
        return MultiColumnMatchFilterProto.MultiColumnMatchFilter.getDefaultInstance();
      }

      public MultiColumnMatchFilterProto.MultiColumnMatchFilter build() {
        MultiColumnMatchFilterProto.MultiColumnMatchFilter result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public MultiColumnMatchFilterProto.MultiColumnMatchFilter buildPartial() {
        MultiColumnMatchFilterProto.MultiColumnMatchFilter result = new MultiColumnMatchFilterProto.MultiColumnMatchFilter(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.columnFamily_ = columnFamily_;
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          mustMatchColumns_ = java.util.Collections.unmodifiableList(mustMatchColumns_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.mustMatchColumns_ = mustMatchColumns_;
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          mayMatchColumns_ = java.util.Collections.unmodifiableList(mayMatchColumns_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.mayMatchColumns_ = mayMatchColumns_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000002;
        }
        result.minMatch_ = minMatch_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof MultiColumnMatchFilterProto.MultiColumnMatchFilter) {
          return mergeFrom((MultiColumnMatchFilterProto.MultiColumnMatchFilter)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(MultiColumnMatchFilterProto.MultiColumnMatchFilter other) {
        if (other == MultiColumnMatchFilterProto.MultiColumnMatchFilter.getDefaultInstance()) return this;
        if (other.hasColumnFamily()) {
          setColumnFamily(other.getColumnFamily());
        }
        if (!other.mustMatchColumns_.isEmpty()) {
          if (mustMatchColumns_.isEmpty()) {
            mustMatchColumns_ = other.mustMatchColumns_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureMustMatchColumnsIsMutable();
            mustMatchColumns_.addAll(other.mustMatchColumns_);
          }
          onChanged();
        }
        if (!other.mayMatchColumns_.isEmpty()) {
          if (mayMatchColumns_.isEmpty()) {
            mayMatchColumns_ = other.mayMatchColumns_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureMayMatchColumnsIsMutable();
            mayMatchColumns_.addAll(other.mayMatchColumns_);
          }
          onChanged();
        }
        if (other.hasMinMatch()) {
          setMinMatch(other.getMinMatch());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasColumnFamily()) {

          return false;
        }
        return true;
      }

      public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
        MultiColumnMatchFilterProto.MultiColumnMatchFilter parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (MultiColumnMatchFilterProto.MultiColumnMatchFilter) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.ByteString columnFamily_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>required bytes columnFamily = 1;</code>
       *
       * <pre>
       *版本过滤的列族
       * </pre>
       */
      public boolean hasColumnFamily() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required bytes columnFamily = 1;</code>
       *
       * <pre>
       *版本过滤的列族
       * </pre>
       */
      public com.google.protobuf.ByteString getColumnFamily() {
        return columnFamily_;
      }
      /**
       * <code>required bytes columnFamily = 1;</code>
       *
       * <pre>
       *版本过滤的列族
       * </pre>
       */
      public Builder setColumnFamily(com.google.protobuf.ByteString value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        columnFamily_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required bytes columnFamily = 1;</code>
       *
       * <pre>
       *版本过滤的列族
       * </pre>
       */
      public Builder clearColumnFamily() {
        bitField0_ = (bitField0_ & ~0x00000001);
        columnFamily_ = getDefaultInstance().getColumnFamily();
        onChanged();
        return this;
      }

      private java.util.List<com.google.protobuf.ByteString> mustMatchColumns_ = java.util.Collections.emptyList();
      private void ensureMustMatchColumnsIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          mustMatchColumns_ = new java.util.ArrayList<com.google.protobuf.ByteString>(mustMatchColumns_);
          bitField0_ |= 0x00000002;
        }
      }
      /**
       * <code>repeated bytes mustMatchColumns = 2;</code>
       *
       * <pre>
       *必须包含的列名
       * </pre>
       */
      public java.util.List<com.google.protobuf.ByteString>
      getMustMatchColumnsList() {
        return java.util.Collections.unmodifiableList(mustMatchColumns_);
      }
      /**
       * <code>repeated bytes mustMatchColumns = 2;</code>
       *
       * <pre>
       *必须包含的列名
       * </pre>
       */
      public int getMustMatchColumnsCount() {
        return mustMatchColumns_.size();
      }
      /**
       * <code>repeated bytes mustMatchColumns = 2;</code>
       *
       * <pre>
       *必须包含的列名
       * </pre>
       */
      public com.google.protobuf.ByteString getMustMatchColumns(int index) {
        return mustMatchColumns_.get(index);
      }
      /**
       * <code>repeated bytes mustMatchColumns = 2;</code>
       *
       * <pre>
       *必须包含的列名
       * </pre>
       */
      public Builder setMustMatchColumns(
              int index, com.google.protobuf.ByteString value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureMustMatchColumnsIsMutable();
        mustMatchColumns_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bytes mustMatchColumns = 2;</code>
       *
       * <pre>
       *必须包含的列名
       * </pre>
       */
      public Builder addMustMatchColumns(com.google.protobuf.ByteString value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureMustMatchColumnsIsMutable();
        mustMatchColumns_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bytes mustMatchColumns = 2;</code>
       *
       * <pre>
       *必须包含的列名
       * </pre>
       */
      public Builder addAllMustMatchColumns(
              Iterable<? extends com.google.protobuf.ByteString> values) {
        ensureMustMatchColumnsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
                values, mustMatchColumns_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bytes mustMatchColumns = 2;</code>
       *
       * <pre>
       *必须包含的列名
       * </pre>
       */
      public Builder clearMustMatchColumns() {
        mustMatchColumns_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }

      private java.util.List<com.google.protobuf.ByteString> mayMatchColumns_ = java.util.Collections.emptyList();
      private void ensureMayMatchColumnsIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          mayMatchColumns_ = new java.util.ArrayList<com.google.protobuf.ByteString>(mayMatchColumns_);
          bitField0_ |= 0x00000004;
        }
      }
      /**
       * <code>repeated bytes mayMatchColumns = 3;</code>
       *
       * <pre>
       *可能包含列名
       * </pre>
       */
      public java.util.List<com.google.protobuf.ByteString>
      getMayMatchColumnsList() {
        return java.util.Collections.unmodifiableList(mayMatchColumns_);
      }
      /**
       * <code>repeated bytes mayMatchColumns = 3;</code>
       *
       * <pre>
       *可能包含列名
       * </pre>
       */
      public int getMayMatchColumnsCount() {
        return mayMatchColumns_.size();
      }
      /**
       * <code>repeated bytes mayMatchColumns = 3;</code>
       *
       * <pre>
       *可能包含列名
       * </pre>
       */
      public com.google.protobuf.ByteString getMayMatchColumns(int index) {
        return mayMatchColumns_.get(index);
      }
      /**
       * <code>repeated bytes mayMatchColumns = 3;</code>
       *
       * <pre>
       *可能包含列名
       * </pre>
       */
      public Builder setMayMatchColumns(
              int index, com.google.protobuf.ByteString value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureMayMatchColumnsIsMutable();
        mayMatchColumns_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bytes mayMatchColumns = 3;</code>
       *
       * <pre>
       *可能包含列名
       * </pre>
       */
      public Builder addMayMatchColumns(com.google.protobuf.ByteString value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureMayMatchColumnsIsMutable();
        mayMatchColumns_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bytes mayMatchColumns = 3;</code>
       *
       * <pre>
       *可能包含列名
       * </pre>
       */
      public Builder addAllMayMatchColumns(
              Iterable<? extends com.google.protobuf.ByteString> values) {
        ensureMayMatchColumnsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
                values, mayMatchColumns_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bytes mayMatchColumns = 3;</code>
       *
       * <pre>
       *可能包含列名
       * </pre>
       */
      public Builder clearMayMatchColumns() {
        mayMatchColumns_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }

      private int minMatch_ = -1;
      /**
       * <code>optional sint32 minMatch = 4 [default = -1];</code>
       *
       * <pre>
       *至少包含多少个列
       * </pre>
       */
      public boolean hasMinMatch() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional sint32 minMatch = 4 [default = -1];</code>
       *
       * <pre>
       *至少包含多少个列
       * </pre>
       */
      public int getMinMatch() {
        return minMatch_;
      }
      /**
       * <code>optional sint32 minMatch = 4 [default = -1];</code>
       *
       * <pre>
       *至少包含多少个列
       * </pre>
       */
      public Builder setMinMatch(int value) {
        bitField0_ |= 0x00000008;
        minMatch_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional sint32 minMatch = 4 [default = -1];</code>
       *
       * <pre>
       *至少包含多少个列
       * </pre>
       */
      public Builder clearMinMatch() {
        bitField0_ = (bitField0_ & ~0x00000008);
        minMatch_ = -1;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.bh.d406.bigdata.hbase.protobuf.MultiColumnMatchFilter)
    }

    static {
      defaultInstance = new MultiColumnMatchFilter(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.bh.d406.bigdata.hbase.protobuf.MultiColumnMatchFilter)
  }

  private static final com.google.protobuf.Descriptors.Descriptor
          internal_static_com_bh_d406_bigdata_hbase_protobuf_MultiColumnMatchFilter_descriptor;
  private static
  com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internal_static_com_bh_d406_bigdata_hbase_protobuf_MultiColumnMatchFilter_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
  getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
          descriptor;
  static {
    String[] descriptorData = {
            "\n\034MultiColumnMatchFilter.proto\022\"com.bh.d" +
                    "406.bigdata.hbase.protobuf\"w\n\026MultiColum" +
                    "nMatchFilter\022\024\n\014columnFamily\030\001 \002(\014\022\030\n\020mu" +
                    "stMatchColumns\030\002 \003(\014\022\027\n\017mayMatchColumns\030" +
                    "\003 \003(\014\022\024\n\010minMatch\030\004 \001(\021:\002-1BK\n,com.bh.d4" +
                    "06.bigdata.hbase.protobuf.generatedB\033Mul" +
                    "tiColumnMatchFilterProto"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
            new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
              public com.google.protobuf.ExtensionRegistry assignDescriptors(
                      com.google.protobuf.Descriptors.FileDescriptor root) {
                descriptor = root;
                return null;
              }
            };
    com.google.protobuf.Descriptors.FileDescriptor
            .internalBuildGeneratedFileFrom(descriptorData,
                    new com.google.protobuf.Descriptors.FileDescriptor[] {
                    }, assigner);
    internal_static_com_bh_d406_bigdata_hbase_protobuf_MultiColumnMatchFilter_descriptor =
            getDescriptor().getMessageTypes().get(0);
    internal_static_com_bh_d406_bigdata_hbase_protobuf_MultiColumnMatchFilter_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
            internal_static_com_bh_d406_bigdata_hbase_protobuf_MultiColumnMatchFilter_descriptor,
            new String[] { "ColumnFamily", "MustMatchColumns", "MayMatchColumns", "MinMatch", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
